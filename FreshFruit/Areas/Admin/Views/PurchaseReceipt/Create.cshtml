@model FreshFruit.Models.ViewModel.PurchaseReceiptCreateViewModel
@{
    ViewData["Title"] = "Thêm phiếu nhập hàng";
    var products = ViewBag.Products as List<SelectListItem>;
    Layout = "_Layout";
}

<div class="page-wrapper">
    <h2 class="mb-4">Thêm phiếu nhập hàng</h2>

    <form asp-action="Create" method="post">
        <div class="form-group mb-3">
            <label asp-for="Supplier"></label>
            <input asp-for="Supplier" class="form-control" />
            <span asp-validation-for="Supplier" class="text-danger"></span>
        </div>

        <div class="form-group mb-3">
            <label asp-for="ReceiptDate"></label>
            <input asp-for="ReceiptDate" class="form-control" type="date" />
            <span asp-validation-for="ReceiptDate" class="text-danger"></span>
        </div>

        <table class="table table-bordered" id="itemTable">
            <thead>
                <tr>
                    <th>Sản phẩm</th>
                    <th>Số lượng</th>
                    <th>Giá nhập</th>
                    <th>Hạn dùng</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <select name="Items[0].ProductId" class="form-control" required>
                            <option value="">-- Chọn sản phẩm --</option>
                            @foreach (var item in products)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        </select>
                    </td>
                    <td>
                        <input name="Items[0].Quantity" type="number" class="form-control" required min="1" />
                    </td>
                    <td>
                        <input name="Items[0].ImportPrice" type="number" step="0.01" class="form-control" required min="0.01" />
                    </td>
                    <td>
                        <input name="Items[0].ExpiryDate" type="date" class="form-control" required />
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger remove-row">Xoá</button>
                    </td>
                </tr>
            </tbody>
        </table>

        <button type="button" class="btn btn-secondary mb-3" id="addRow">Thêm dòng</button><br />
        <button type="submit" class="btn btn-primary">Lưu phiếu</button>
        <a asp-action="Index" class="btn btn-secondary">Huỷ</a>
    </form>


    </div>
@section Scripts {
    <script>
        let rowIndex = 1;

        document.getElementById("addRow").addEventListener("click", function () {
            const tableBody = document.querySelector("#itemTable tbody");
            const newRow = document.createElement("tr");

            newRow.innerHTML = `
                <td>
                    <select name="Items[${rowIndex}].ProductId" class="form-control">
                        <option value="">-- Chọn sản phẩm --</option>
                        @foreach (var item in products)
                        {
                                <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                </td>
                <td><input name="Items[${rowIndex}].Quantity" type="number" class="form-control" /></td>
                <td><input name="Items[${rowIndex}].ImportPrice" type="number" step="0.01" class="form-control" /></td>
                <td><input name="Items[${rowIndex}].ExpiryDate" type="date" class="form-control" /></td>
                <td><button type="button" class="btn btn-danger remove-row">Xoá</button></td>
            `;

            tableBody.appendChild(newRow);
            rowIndex++;
        });

        document.addEventListener("click", function (e) {
            if (e.target && e.target.classList.contains("remove-row")) {
                e.target.closest("tr").remove();
            }
        });
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        };
    </script>
}
